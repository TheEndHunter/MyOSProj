#pragma once

#include "UEFIDef.h"
#include "EFI_STATUS.h"
#include "EFI_GUID.h"
#include "EFI_EVENT.h"
#include "Protocols/IO/Peripheral/EFI_KEY_DATA.h"

namespace EFI
{
	struct EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL;

	constinit  const ALIGN(8) EFI::EFI_GUID EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL_GUID = { 0xdd9e7534, 0x7762, 0x4698,{ 0x8c, 0x14, 0xf5, 0x85, 0x17, 0xa6, 0x25, 0xaa} };

	typedef EFI::EFI_STATUS (EFIAPI* EFI_INPUT_RESET_EX)  (IN EFI::EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL* This, IN BOOLEAN ExtendedVerification);
	typedef EFI::EFI_STATUS (EFIAPI* EFI_INPUT_READ_KEY_EX ) (IN EFI::EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL* This, OUT EFI::EFI_KEY_DATA* KeyData);
	typedef EFI::EFI_STATUS (EFIAPI* EFI_SET_STATE) (IN EFI::EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL* This,IN EFI::EFI_KEY_TOGGLE_STATE* KeyToggleState);

	typedef EFI::EFI_STATUS(EFIAPI* EFI_KEY_NOTIFY_FUNCTION) (IN EFI::EFI_KEY_DATA* KeyData);
	typedef EFI::EFI_STATUS (EFIAPI* EFI_REGISTER_KEYSTROKE_NOTIFY) (IN EFI::EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL* This,IN EFI::EFI_KEY_DATA* KeyData,IN EFI::EFI_KEY_NOTIFY_FUNCTION KeyNotificationFunction,OUT VOID** NotifyHandle);
	typedef EFI::EFI_STATUS(EFIAPI* EFI_UNREGISTER_KEYSTROKE_NOTIFY) (IN EFI::EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL* This,IN VOID* NotificationHandle);

	struct EFI_SIMPLE_TEXT_INPUT_EX_PROTOCOL
	{
	public:
		EFI::EFI_INPUT_RESET_EX Reset;
		EFI::EFI_INPUT_READ_KEY_EX ReadKeyStrokeEx;
		EFI::EFI_EVENT WaitForKeyEx;
		EFI::EFI_SET_STATE SetState;
		EFI::EFI_REGISTER_KEYSTROKE_NOTIFY RegisterKeyNotify;
		EFI::EFI_UNREGISTER_KEYSTROKE_NOTIFY UnregisterKeyNotify;
	};
}