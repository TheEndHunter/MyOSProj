#pragma once
#include <UEFIDef.h>

namespace EFI
{
	enum class EFI_FOREGROUND_COLOR : UINT8
	{
		BLACK = 0x00,
		BLUE = 0x01,
		GREEN = 0x02,
		CYAN = 0x03,
		RED = 0x04,
		MAGENTA = 0x05,
		BROWN = 0x06,
		LIGHTGRAY = 0x07,
		BRIGHT = 0x08,
		DARKGRAY = 0x08,
		LIGHTBLUE = 0x09,
		LIGHTGREEN = 0x0A,
		LIGHTCYAN = 0x0B,
		LIGHTRED = 0x0C,
		LIGHTMAGENTA = 0x0D,
		YELLOW = 0x0E,
		WHITE = 0x0F

	};

	enum class EFI_BACKGROUND_COLOR : UINT8
	{
		BLACK = 0x00,
		BLUE = 0x10,
		GREEN = 0x20,
		CYAN = 0x30,
		RED = 0x40,
		MAGENTA = 0x50,
		BROWN = 0x60,
		LIGHTGRAY = 0x70,
	};

	constexpr UINT8 operator | (const EFI_FOREGROUND_COLOR fore, const EFI_BACKGROUND_COLOR back)
	{
			return static_cast<UINT8>(fore) | static_cast<UINT8>(back);
	}
	

	static class EFI_CONSOLE_COLOR
	{
	public:
		static const UINT8 SUCCESS_COLOR = EFI_FOREGROUND_COLOR::GREEN | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 DEFAULT_COLOR = EFI_FOREGROUND_COLOR::WHITE | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 WARNING_COLOR = EFI_FOREGROUND_COLOR::YELLOW | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 ERROR_COLOR = EFI_FOREGROUND_COLOR::RED | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 TRACE_COLOR = EFI_FOREGROUND_COLOR::LIGHTCYAN | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 DEBUG_COLOR = EFI_FOREGROUND_COLOR::CYAN | EFI_BACKGROUND_COLOR::BLACK;
		static const UINT8 FATAL_COLOR = EFI_FOREGROUND_COLOR::WHITE | EFI_BACKGROUND_COLOR::BLUE;
	};
}
