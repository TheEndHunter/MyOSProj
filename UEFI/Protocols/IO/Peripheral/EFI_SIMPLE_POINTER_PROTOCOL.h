#pragma once

#include <UefiDef.h>
#include <EFI_STATUS.h>
#include <EFI_GUID.h>
#include <EFI_EVENT.h>
#include "EFI_SIMPLE_POINTER_MODE.h"
#include "EFI_SIMPLE_POINTER_STATE.h"

namespace EFI
{
	struct EFI_SIMPLE_POINTER_PROTOCOL;

	constinit const EFI_GUID EFI_SIMPLE_POINTER_PROTOCOL_GUID = { 0x31878c87, 0xb75, 0x11d5,{ 0x9a, 0x4f, 0x00, 0x90, 0x27, 0x3f, 0xc1, 0x4d }};

	typedef EFI_STATUS (EFIAPI* EFI_SIMPLE_POINTER_RESET) (IN EFI_SIMPLE_POINTER_PROTOCOL* This, IN BOOLEAN ExtendedVerification);
	typedef EFI_STATUS (EFIAPI* EFI_SIMPLE_POINTER_GET_STATE)(IN EFI_SIMPLE_POINTER_PROTOCOL* This, OUT EFI::EFI_SIMPLE_POINTER_STATE* State);
	struct EFI_SIMPLE_POINTER_PROTOCOL
	{
	public:
		EFI::EFI_SIMPLE_POINTER_RESET Reset;
		EFI::EFI_SIMPLE_POINTER_GET_STATE GetState;
		EFI::EFI_EVENT WaitForInput;
		EFI::EFI_SIMPLE_POINTER_MODE* Mode;
	};
}
