#pragma once

#include <UEFIDef.h>
#include <EFI_GUID.h>
#include <EFI_EVENT.h>
#include <EFI_STATUS.h>
#include "EFI_ABSOLUTE_POINTER_MODE.h"
#include "EFI_ABSOLUTE_POINTER_STATE.h"

namespace EFI
{
	struct EFI_ABSOLUTE_POINTER_PROTOCOL;
	constinit  const ALIGN(8) EFI::EFI_GUID EFI_ABSOLUTE_POINTER_PROTOCOL_GUID = {0x8D59D32B, 0xC655, 0x4AE9, {0x9B, 0x15, 0xF2, 0x59, 0x04, 0x99, 0x2A, 0x43}};

	typedef EFI_STATUS(EFIAPI* EFI_ABSOLUTE_POINTER_RESET) (IN EFI_ABSOLUTE_POINTER_PROTOCOL* This,IN BOOLEAN ExtendedVerification);
	typedef EFI_STATUS(EFIAPI* EFI_ABSOLUTE_POINTER_GET_STATE) (IN EFI_ABSOLUTE_POINTER_PROTOCOL* This,OUT EFI_ABSOLUTE_POINTER_STATE* State);

	struct EFI_ABSOLUTE_POINTER_PROTOCOL
	{
	public:
		EFI_ABSOLUTE_POINTER_RESET Reset;
		EFI_ABSOLUTE_POINTER_GET_STATE GetState;
		EFI_EVENT WaitForInput;
		EFI_ABSOLUTE_POINTER_MODE* Mode;
	};
}