#pragma once
#include <UEFIDef.h>

namespace EFI
{
	const UINT8 IMAGE_FILE_MACHINE_I386 = 0x014C;
	const UINT8 IMAGE_FILE_MACHINE_X64 = 0x8664;
	const UINT8 IMAGE_FILE_MACHINE_IA64 = 0x0200;
	const UINT8 IMAGE_FILE_MACHINE_EBC = 0x0EBC;
	const UINT8 IMAGE_FILE_MACHINE_ARMTHUMB_MIXED = 0x1C2;
	const UINT8 IMAGE_FILE_MACHINE_AARCH64 = 0xAA64;
	const UINT8 IMAGE_FILE_MACHINE_RISCV32 = 0x5032;
	const UINT8 IMAGE_FILE_MACHINE_RISCV64 = 0x5064;
	const UINT8 IMAGE_FILE_MACHINE_RISCV128 = 0x5128;
	const UINT8 IMAGE_FILE_MACHINE_LOONGARCH32 = 0x6232;
	const UINT8 IMAGE_FILE_MACHINE_LOONGARCH64 = 0x6264;

	typedef enum class EFI_EXCEPTION_TYPE : INTN
	{
		// EBC Exception types
		EXCEPT_EBC_UNDEFINED = 0,
		EXCEPT_EBC_DIVIDE_ERROR = 1,
		EXCEPT_EBC_DEBUG = 2,
		EXCEPT_EBC_BREAKPOINT = 3,
		EXCEPT_EBC_OVERFLOW = 4,
		EXCEPT_EBC_INVALID_OPCODE = 5,
		EXCEPT_EBC_STACK_FAULT = 6,
		EXCEPT_EBC_ALIGNMENT_CHECK = 7,
		EXCEPT_EBC_INSTRUCTION_ENCODING = 8,
		EXCEPT_EBC_BAD_BREAK = 9,
		EXCEPT_EBC_SINGLE_STEP = 10,
		// IA-32 Exception types
		EXCEPT_IA32_DIVIDE_ERROR = 0,
		EXCEPT_IA32_DEBUG = 1,
		EXCEPT_IA32_NMI = 2,
		EXCEPT_IA32_BREAKPOINT = 3,
		EXCEPT_IA32_OVERFLOW = 4,
		EXCEPT_IA32_BOUND = 5,
		EXCEPT_IA32_INVALID_OPCODE = 6,
		EXCEPT_IA32_DOUBLE_FAULT = 8,
		EXCEPT_IA32_INVALID_TSS = 10,
		EXCEPT_IA32_SEG_NOT_PRESENT = 11,
		EXCEPT_IA32_STACK_FAULT = 12,
		EXCEPT_IA32_GP_FAULT = 13,
		EXCEPT_IA32_PAGE_FAULT = 14,
		EXCEPT_IA32_FP_ERROR = 16,
		EXCEPT_IA32_ALIGNMENT_CHECK = 17,
		EXCEPT_IA32_MACHINE_CHECK = 18,
		EXCEPT_IA32_SIMD = 19,
		//
		// X64 Exception types
		//
		EXCEPT_X64_DIVIDE_ERROR = 0,
		EXCEPT_X64_DEBUG = 1,
		EXCEPT_X64_NMI = 2,
		EXCEPT_X64_BREAKPOINT = 3,
		EXCEPT_X64_OVERFLOW = 4,
		EXCEPT_X64_BOUND = 5,
		EXCEPT_X64_INVALID_OPCODE = 6,
		EXCEPT_X64_DOUBLE_FAULT = 8,
		EXCEPT_X64_INVALID_TSS = 10,
		EXCEPT_X64_SEG_NOT_PRESENT = 11,
		EXCEPT_X64_STACK_FAULT = 12,
		EXCEPT_X64_GP_FAULT = 13,
		EXCEPT_X64_PAGE_FAULT = 14,
		EXCEPT_X64_FP_ERROR = 16,
		EXCEPT_X64_ALIGNMENT_CHECK = 17,
		EXCEPT_X64_MACHINE_CHECK = 18,
		EXCEPT_X64_SIMD = 19,
		// Itanium Processor Family Exception types
		EXCEPT_IPF_VHTP_TRANSLATION = 0,
		EXCEPT_IPF_INSTRUCTION_TLB = 1,
		EXCEPT_IPF_DATA_TLB = 2,
		EXCEPT_IPF_ALT_INSTRUCTION_TLB = 3,
		EXCEPT_IPF_ALT_DATA_TLB = 4,
		EXCEPT_IPF_DATA_NESTED_TLB = 5,
		EXCEPT_IPF_INSTRUCTION_KEY_MISSED = 6,
		EXCEPT_IPF_DATA_KEY_MISSED = 7,
		EXCEPT_IPF_DIRTY_BIT = 8,
		EXCEPT_IPF_INSTRUCTION_ACCESS_BIT = 9,
		EXCEPT_IPF_DATA_ACCESS_BIT = 10,
		EXCEPT_IPF_BREAKPOINT = 11,
		EXCEPT_IPF_EXTERNAL_INTERRUPT = 12,
		// 13 - 19 reserved
		EXCEPT_IPF_PAGE_NOT_PRESENT = 20,
		EXCEPT_IPF_KEY_PERMISSION = 21,
		EXCEPT_IPF_INSTRUCTION_ACCESS_RIGHTS = 22,
		EXCEPT_IPF_DATA_ACCESS_RIGHTS = 23,
		EXCEPT_IPF_GENERAL_EXCEPTION = 24,
		EXCEPT_IPF_DISABLED_FP_REGISTER = 25,
		EXCEPT_IPF_NAT_CONSUMPTION = 26,
		EXCEPT_IPF_SPECULATION = 27,
		// 28 reserved
		EXCEPT_IPF_DEBUG = 29,
		EXCEPT_IPF_UNALIGNED_REFERENCE = 30,
		EXCEPT_IPF_UNSUPPORTED_DATA_REFERENCE = 31,
		EXCEPT_IPF_FP_FAULT = 32,
		EXCEPT_IPF_FP_TRAP = 33,
		EXCEPT_IPF_LOWER_PRIVILEGE_TRANSFER_TRAP = 34,
		EXCEPT_IPF_TAKEN_BRANCH = 35,
		EXCEPT_IPF_SINGLE_STEP = 36,
		// 37 - 44 reserved
		EXCEPT_IPF_IA32_EXCEPTION = 45,
		EXCEPT_IPF_IA32_INTERCEPT = 46,
		EXCEPT_IPF_IA32_INTERRUPT = 47,
		//
		// ARM processor exception types
		//
		EXCEPT_ARM_RESET = 0,
		EXCEPT_ARM_UNDEFINED_INSTRUCTION = 1,
		EXCEPT_ARM_SOFTWARE_INTERRUPT = 2,
		EXCEPT_ARM_PREFETCH_ABORT = 3,
		EXCEPT_ARM_DATA_ABORT = 4,
		EXCEPT_ARM_RESERVED = 5,
		EXCEPT_ARM_IRQ = 6,
		EXCEPT_ARM_FIQ = 7,
		//
		// For coding convenience, define the maximum valid ARM
		// exception.
		//
		MAX_ARM_EXCEPTION = EXCEPT_ARM_FIQ,
		///
		/// AARCH64 processor exception types.
		///
		EXCEPT_AARCH64_SYNCHRONOUS_EXCEPTIONS = 0,
		EXCEPT_AARCH64_IRQ = 1,
		EXCEPT_AARCH64_FIQ = 2,
		EXCEPT_AARCH64_SERROR = 3,
		///
		/// For coding convenience, define the maximum valid
		/// AARCH64 exception.
		///
		MAX_AARCH64_EXCEPTION = EXCEPT_AARCH64_SERROR,
		///
		/// RISC-V processor exception types.
		///
		EXCEPT_RISCV_INST_MISALIGNED = 0,
		EXCEPT_RISCV_INST_ACCESS_FAULT = 1,
		EXCEPT_RISCV_ILLEGAL_INST = 2,
		EXCEPT_RISCV_BREAKPOINT = 3,
		EXCEPT_RISCV_LOAD_ADDRESS_MISALIGNED = 4,
		EXCEPT_RISCV_LOAD_ACCESS_FAULT = 5,
		EXCEPT_RISCV_STORE_AMO_ADDRESS_MISALIGNED = 6,
		EXCEPT_RISCV_STORE_AMO_ACCESS_FAULT = 7,
		EXCEPT_RISCV_ENV_CALL_FROM_UMODE = 8,
		EXCEPT_RISCV_ENV_CALL_FROM_SMODE = 9,
		EXCEPT_RISCV_ENV_CALL_FROM_MMODE = 11,
		EXCEPT_RISCV_INST_PAGE_FAULT = 12,
		EXCEPT_RISCV_LOAD_PAGE_FAULT = 13,
		EXCEPT_RISCV_STORE_AMO_PAGE_FAULT = 15,
		///
		/// RISC-V processor interrupt types.
		///
		EXCEPT_RISCV_SUPERVISOR_SOFTWARE_INT = 1,
		EXCEPT_RISCV_MACHINE_SOFTWARE_INT = 3,
		EXCEPT_RISCV_SUPERVISOR_TIMER_INT = 5,
		EXCEPT_RISCV_MACHINE_TIMER_INT = 7,
		EXCEPT_RISCV_SUPERVISOR_EXTERNAL_INT = 9,
		EXCEPT_RISCV_MACHINE_EXTERNAL_INT = 11,
		//
		// LoongArch processor exception types.
		//
		EXCEPT_LOONGARCH_INT = 0,
		EXCEPT_LOONGARCH_PIL = 1,
		EXCEPT_LOONGARCH_PIS = 2,
		EXCEPT_LOONGARCH_PIF = 3,
		EXCEPT_LOONGARCH_PME = 4,
		EXCEPT_LOONGARCH_PNR = 5,
		EXCEPT_LOONGARCH_PNX = 6,
		EXCEPT_LOONGARCH_PPI = 7,
		EXCEPT_LOONGARCH_ADE = 8,
		EXCEPT_LOONGARCH_ALE = 9,
		EXCEPT_LOONGARCH_BCE = 10,
		EXCEPT_LOONGARCH_SYS = 11,
		EXCEPT_LOONGARCH_BRK = 12,
		EXCEPT_LOONGARCH_INE = 13,
		EXCEPT_LOONGARCH_IPE = 14,
		EXCEPT_LOONGARCH_FPD = 15,
		EXCEPT_LOONGARCH_SXD = 16,
		EXCEPT_LOONGARCH_ASXD = 17,
		EXCEPT_LOONGARCH_FPE = 18,

		//
		// LoongArch processor Interrupt types.
		//
		EXCEPT_LOONGARCH_INT_SIP0 = 0,
		EXCEPT_LOONGARCH_INT_SIP1 = 1,
		EXCEPT_LOONGARCH_INT_IP0 = 2,
		EXCEPT_LOONGARCH_INT_IP1 = 3,
		EXCEPT_LOONGARCH_INT_IP2 = 4,
		EXCEPT_LOONGARCH_INT_IP3 = 5,
		EXCEPT_LOONGARCH_INT_IP4 = 6,
		EXCEPT_LOONGARCH_INT_IP5 = 7,
		EXCEPT_LOONGARCH_INT_IP6 = 8,
		EXCEPT_LOONGARCH_INT_IP7 = 9,
		EXCEPT_LOONGARCH_INT_PMC = 10,
		EXCEPT_LOONGARCH_INT_TIMER = 11,
		EXCEPT_LOONGARCH_INT_IPI = 12,
		EXCEPT_LOONGARCH_INT_IP13 = 13,
		EXCEPT_LOONGARCH_INT_IP14 = 14,
		//
		// For coding convenience, define the maximum valid
		// LoongArch interrupt.
		//
		MAX_LOONGARCH_INTERRUPT = 14,
	};
}
